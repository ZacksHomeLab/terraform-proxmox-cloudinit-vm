module "terragrunt_wrapper" {
  source = "../"

  for_each = var.items

  create_vm                   = try(each.value.create_vm, var.defaults.create_vm, true)
  agent                       = try(each.value.agent, var.defaults.agent, 1)
  automatic_reboot            = try(each.value.automatic_reboot, var.defaults.automatic_reboot, true)
  balloon                     = try(each.value.balloon, var.defaults.balloon, 0)
  bios                        = try(each.value.bios, var.defaults.bios, "seabios")
  boot                        = try(each.value.boot, var.defaults.boot, "")
  bootdisk                    = try(each.value.bootdisk, var.defaults.bootdisk, "")
  ci_wait                     = try(each.value.ci_wait, var.defaults.ci_wait, 30)
  cicustom                    = try(each.value.cicustom, var.defaults.cicustom, "")
  cipassword                  = try(each.value.cipassword, var.defaults.cipassword, "")
  ciuser                      = try(each.value.ciuser, var.defaults.ciuser, "")
  clone                       = try(each.value.clone, var.defaults.clone, "")
  cloudinit_cdrom_storage     = try(each.value.cloudinit_cdrom_storage, var.defaults.cloudinit_cdrom_storage, "")
  cores                       = try(each.value.cores, var.defaults.cores, 1)
  cpu                         = try(each.value.cpu, var.defaults.cpu, "host")
  description                 = try(each.value.description, var.defaults.description, "")
  disks                       = try(each.value.disks, var.defaults.disks, [])
  force_create                = try(each.value.force_create, var.defaults.force_create, false)
  force_recreate_on_change_of = try(each.value.force_recreate_on_change_of, var.defaults.force_recreate_on_change_of, "")
  full_clone                  = try(each.value.full_clone, var.defaults.full_clone, true)
  hagroup                     = try(each.value.hagroup, var.defaults.hagroup, "")
  hastate                     = try(each.value.hastate, var.defaults.hastate, "")
  hotplug                     = try(each.value.hotplug, var.defaults.hotplug, "cpu,network,disk,usb")
  memory                      = try(each.value.memory, var.defaults.memory, 1024)
  nameserver                  = try(each.value.nameserver, var.defaults.nameserver, "")
  networks                    = try(each.value.networks, var.defaults.networks, [])
  numa                        = try(each.value.numa, var.defaults.numa, false)
  onboot                      = try(each.value.onboot, var.defaults.onboot, false)
  oncreate                    = try(each.value.oncreate, var.defaults.oncreate, true)
  os_type                     = try(each.value.os_type, var.defaults.os_type, "cloud-init")
  pool                        = try(each.value.pool, var.defaults.pool, "")
  scsihw                      = try(each.value.scsihw, var.defaults.scsihw, "virtio-scsi-pci")
  searchdomain                = try(each.value.searchdomain, var.defaults.searchdomain, "")
  serials                     = try(each.value.serials, var.defaults.serials, [])
  sockets                     = try(each.value.sockets, var.defaults.sockets, 1)
  sshkeys                     = try(each.value.sshkeys, var.defaults.sshkeys, "")
  startup                     = try(each.value.startup, var.defaults.startup, "")
  tablet                      = try(each.value.tablet, var.defaults.tablet, true)
  tags                        = try(each.value.tags, var.defaults.tags, [])
  target_node                 = try(each.value.target_node, var.defaults.target_node, "")
  usbs                        = try(each.value.usbs, var.defaults.usbs, [])
  vgas                        = try(each.value.vgas, var.defaults.vgas, [])
  vm_name                     = try(each.value.vm_name, var.defaults.vm_name, "")
  vmid                        = try(each.value.vmid, var.defaults.vmid, 0)
}
